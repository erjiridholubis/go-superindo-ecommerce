basePath: /api/v1
definitions:
  common.ApiErrorResponseModel:
    properties:
      error:
        $ref: '#/definitions/common.ErrorResponseModel'
    type: object
  common.ErrorResponseModel:
    properties:
      code:
        type: integer
      errors:
        additionalProperties: true
        type: object
      message:
        type: string
    type: object
  common.ErrorValidationResponseModel:
    properties:
      code:
        type: integer
      errors: {}
      message:
        type: string
    type: object
  model.AuthRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  model.AuthResponse:
    properties:
      kind:
        type: string
      token:
        type: string
    type: object
  model.CartItemList:
    properties:
      cart_items:
        items:
          $ref: '#/definitions/model.CartItemResponse'
        type: array
      kind:
        type: string
    type: object
  model.CartItemRequest:
    properties:
      product_id:
        type: string
      quantity:
        type: integer
    required:
    - product_id
    - quantity
    type: object
  model.CartItemResponse:
    properties:
      id:
        type: string
      kind:
        type: string
      product_id:
        type: string
      quantity:
        type: integer
      user_id:
        type: string
    type: object
  model.CategoryList:
    properties:
      categories:
        items:
          $ref: '#/definitions/model.CategoryResponse'
        type: array
      kind:
        type: string
    type: object
  model.CategoryRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  model.CategoryResponse:
    properties:
      id:
        type: string
      kind:
        type: string
      name:
        type: string
    type: object
  model.ProductList:
    properties:
      category_id:
        type: string
      kind:
        type: string
      products:
        items:
          $ref: '#/definitions/model.ProductResponse'
        type: array
    type: object
  model.ProductRequest:
    properties:
      category_id:
        type: string
      description:
        type: string
      name:
        type: string
      price:
        type: integer
      stock:
        type: integer
    required:
    - category_id
    - description
    - name
    - price
    - stock
    type: object
  model.ProductResponse:
    properties:
      category_id:
        type: string
      description:
        type: string
      id:
        type: string
      kind:
        type: string
      name:
        type: string
      price:
        type: integer
      stock:
        type: integer
    type: object
  model.User:
    properties:
      id:
        type: string
      name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  model.UserRequest:
    properties:
      name:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - name
    - password
    - username
    type: object
host: go-superindo-ecommerce-production.up.railway.app
info:
  contact: {}
  description: This is a sample server for Lion Superindo API Product Service.
  title: Go Superindo API Product
  version: 1.0.0
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: Auth
        in: body
        name: auth
        required: true
        schema:
          $ref: '#/definitions/model.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ApiErrorResponseModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.ApiErrorResponseModel'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/common.ApiErrorResponseModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ApiErrorResponseModel'
      summary: Login
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ApiErrorResponseModel'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/common.ApiErrorResponseModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ApiErrorResponseModel'
      summary: Register
      tags:
      - Auth
  /cart-items:
    post:
      consumes:
      - application/json
      description: Create Cart Item
      parameters:
      - description: Cart Item
        in: body
        name: cartItem
        required: true
        schema:
          $ref: '#/definitions/model.CartItemRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CartItemResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ErrorValidationResponseModel'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/common.ErrorValidationResponseModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ApiErrorResponseModel'
      security:
      - Authorization: []
      summary: Create Cart Item
      tags:
      - Cart Item
  /cart-items/{user_id}:
    get:
      consumes:
      - application/json
      description: Get Cart Item By User ID
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CartItemList'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.ApiErrorResponseModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ApiErrorResponseModel'
      security:
      - Authorization: []
      summary: Get Cart Item By User ID
      tags:
      - Cart Item
  /categories:
    get:
      consumes:
      - application/json
      description: Get All Category
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CategoryList'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.ApiErrorResponseModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ApiErrorResponseModel'
      security:
      - Authorization: []
      summary: Get All Category
      tags:
      - Category
    post:
      consumes:
      - application/json
      description: Create Category
      parameters:
      - description: Category Body
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/model.CategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CategoryResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/common.ErrorValidationResponseModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ApiErrorResponseModel'
      security:
      - Authorization: []
      summary: Create Category
      tags:
      - Category
  /categories/{id}:
    get:
      consumes:
      - application/json
      description: Get Category By ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CategoryResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.ApiErrorResponseModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ApiErrorResponseModel'
      security:
      - Authorization: []
      summary: Get Category By ID
      tags:
      - Category
  /products:
    get:
      consumes:
      - application/json
      description: Get All Product
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ProductList'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.ApiErrorResponseModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ApiErrorResponseModel'
      security:
      - Authorization: []
      summary: Get All Product
      tags:
      - Product
    post:
      consumes:
      - application/json
      description: Create Product
      parameters:
      - description: Product Request
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/model.ProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ProductResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/common.ErrorValidationResponseModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ApiErrorResponseModel'
      security:
      - Authorization: []
      summary: Create Product
      tags:
      - Product
  /products/{id}:
    get:
      consumes:
      - application/json
      description: Get Detail Product By ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ProductResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.ApiErrorResponseModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ApiErrorResponseModel'
      security:
      - Authorization: []
      summary: Get Product By ID
      tags:
      - Product
  /products/category/{id}:
    get:
      consumes:
      - application/json
      description: Get Product By Category ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ProductList'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.ApiErrorResponseModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ApiErrorResponseModel'
      security:
      - Authorization: []
      summary: Get Product By Category ID
      tags:
      - Product
  /users/profile:
    get:
      consumes:
      - application/json
      description: Get User Profile by User ID from JWT
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.ApiErrorResponseModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ApiErrorResponseModel'
      security:
      - Authorization: []
      summary: Get User Profile
      tags:
      - User
schemes:
- https
securityDefinitions:
  Authorization:
    description: This is a bearer token. Add 'Bearer ' before placing the token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
